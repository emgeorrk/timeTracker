{
    "swagger": "2.0",
    "info": {
        "description": "Time tracking application.",
        "title": "Time Tracker API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8084",
    "basePath": "/api/v1/",
    "paths": {
        "/users": {
            "get": {
                "description": "Возвращает список всех пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1. Get"
                ],
                "summary": "GetUsers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Серия паспорта пользователя",
                        "name": "passport_series",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Номер паспорта пользователя",
                        "name": "passport_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фамилия пользователя",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Имя пользователя",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Отчество пользователя",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Адрес пользователя",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2. Post"
                ],
                "summary": "CreateUser",
                "parameters": [
                    {
                        "description": "Серия и номер паспорта",
                        "name": "passportNumber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.passportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "description": "Обновляет информацию о пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "3. Put"
                ],
                "summary": "UpdateUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Серия паспорта",
                        "name": "passport_series",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "description": "Номер паспорта",
                        "name": "passport_number",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "description": "Фамилия",
                        "name": "surname",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "description": "Имя",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "description": "Отчество",
                        "name": "patronymic",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "description": "Адрес",
                        "name": "address",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет пользователя и все связанные с ними записи",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "4. Delete"
                ],
                "summary": "DeleteUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}/tasks": {
            "post": {
                "description": "Создает задачу для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2. Post"
                ],
                "summary": "CreateTask",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Название задачи",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.taskNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}/tasks/{task_id}/start": {
            "post": {
                "description": "Начинает отсчет для задачи пользователя, создает задачу, если ее не существует",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2. Post"
                ],
                "summary": "StartTaskTimer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}/tasks/{task_id}/stop": {
            "post": {
                "description": "Заканчивает отсчет для задачи пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2. Post"
                ],
                "summary": "StopTaskTimer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}/tasks_overview": {
            "get": {
                "description": "Возвращает трудозатраты по пользователю",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1. Get"
                ],
                "summary": "GetTasksOverview",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Период",
                        "name": "period",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.overviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.overviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "handlers.overviewRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "handlers.overviewResponse": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "task": {
                                "$ref": "#/definitions/models.Task"
                            },
                            "time_spent_in_period": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "handlers.passportRequest": {
            "type": "object",
            "properties": {
                "passportNumber": {
                    "type": "string"
                }
            }
        },
        "handlers.taskNameRequest": {
            "type": "object",
            "properties": {
                "task_name": {
                    "type": "string"
                }
            }
        },
        "handlers.updateUserRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "passport_series": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.Period": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "task_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "overall_time_spent": {
                    "$ref": "#/definitions/time.Duration"
                },
                "periods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Period"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "passport_series": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second"
            ]
        }
    }
}